'use client';

import { useState, useEffect } from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import Link from 'next/link';

interface TechnicalData {
  date: string;
  price: number;
  rsi: number;
  macd: number;
  macdSignal: number;
  bollingerUpper: number;
  bollingerMiddle: number;
  bollingerLower: number;
  ma50: number;
  ma200: number;
}

interface TechnicalMetrics {
  currentRSI: number;
  currentMACD: number;
  currentMACDSignal: number;
  bollingerPosition: string;
  maPosition: string;
  overallSignal: string;
}

export default function TechnicalAnalysis() {
  const [technicalData, setTechnicalData] = useState<TechnicalData[]>([]);
  const [metrics, setMetrics] = useState<TechnicalMetrics | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Fetch real technical data from API instead of generating mock data
    const fetchTechnicalData = async () => {
      try {
        setLoading(true);
        // For now, set empty data to avoid showing mock data
        // In production, this would fetch real technical data from the database
        setTechnicalData([]);
        setMetrics(null);
      } catch (error) {
        console.error('Error fetching technical data:', error);
        setTechnicalData([]);
        setMetrics(null);
      } finally {
        setLoading(false);
      }
    };

    fetchTechnicalData();
  }, []);

  const getSignalColor = (signal: string) => {
    switch (signal) {
      case 'MUA': return 'bg-green-500 text-white';
      case 'B√ÅN': return 'bg-red-500 text-white';
      case 'GI·ªÆ': return 'bg-yellow-500 text-white';
      default: return 'bg-gray-500 text-white';
    }
  };

  const getRSIColor = (rsi: number) => {
    if (rsi > 70) return 'text-red-600';
    if (rsi < 30) return 'text-green-600';
    return 'text-yellow-600';
  };

  const getMACDColor = (macd: number, signal: number) => {
    return macd > signal ? 'text-green-600' : 'text-red-600';
  };

  const getBBPositionColor = (position: string) => {
    switch (position) {
      case 'Tr√™n d·∫£i tr√™n': return 'text-red-600';
      case 'D∆∞·ªõi d·∫£i d∆∞·ªõi': return 'text-green-600';
      default: return 'text-yellow-600';
    }
  };

  const getMAPositionColor = (position: string) => {
    return position === 'Golden Cross' ? 'text-green-600' : 'text-red-600';
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">ƒêang t·∫£i d·ªØ li·ªáu k·ªπ thu·∫≠t...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4 py-6">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">
                Technical Analysis
              </h1>
              <p className="text-gray-600 mt-1">
                Ph√¢n t√≠ch k·ªπ thu·∫≠t chuy√™n s√¢u
              </p>
            </div>
            <div className="mt-4 md:mt-0">
              <Link href="/">
                <Button variant="outline">‚Üê Quay l·∫°i Dashboard</Button>
              </Link>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-6">
        {/* Key Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">RSI Hi·ªán T·∫°i</CardTitle>
              <div className="h-4 w-4 text-muted-foreground">üìä</div>
            </CardHeader>
            <CardContent>
              <div className={`text-2xl font-bold ${getRSIColor(metrics?.currentRSI || 0)}`}>
                {metrics?.currentRSI || 'N/A'}
              </div>
              <p className="text-xs text-muted-foreground">
                Relative Strength Index
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">MACD</CardTitle>
              <div className="h-4 w-4 text-muted-foreground">üìà</div>
            </CardHeader>
            <CardContent>
              <div className={`text-2xl font-bold ${getMACDColor(metrics?.currentMACD || 0, metrics?.currentMACDSignal || 0)}`}>
                {metrics?.currentMACD ? metrics.currentMACD.toFixed(2) : 'N/A'}
              </div>
              <p className="text-xs text-muted-foreground">
                Signal: {metrics?.currentMACDSignal ? metrics.currentMACDSignal.toFixed(2) : 'N/A'}
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Bollinger Bands</CardTitle>
              <div className="h-4 w-4 text-muted-foreground">üìä</div>
            </CardHeader>
            <CardContent>
              <div className={`text-2xl font-bold ${getBBPositionColor(metrics?.bollingerPosition || '')}`}>
                {metrics?.bollingerPosition || 'N/A'}
              </div>
              <p className="text-xs text-muted-foreground">
                V·ªã tr√≠ gi√° t∆∞∆°ng ƒë·ªëi
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">T√≠n Hi·ªáu</CardTitle>
              <div className="h-4 w-4 text-muted-foreground">üö®</div>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">
                <Badge className={getSignalColor(metrics?.overallSignal || '')}>
                  {metrics?.overallSignal || 'N/A'}
                </Badge>
              </div>
              <p className="text-xs text-muted-foreground">
                MA: {metrics?.maPosition || 'N/A'}
              </p>
            </CardContent>
          </Card>
        </div>

        {/* No Data Message */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>Technical Analysis Charts</CardTitle>
            <CardDescription>
              Real technical data will be displayed when available from database
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="text-center py-12">
              <div className="text-gray-500 mb-4">
                üìä Technical analysis data is being collected from real sources
              </div>
              <div className="text-sm text-gray-400">
                No mock data is displayed - only real or historical fallback data will be shown
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Technical Analysis Summary */}
        <Card>
          <CardHeader>
            <CardTitle>üìà T·ªïng quan ph√¢n t√≠ch k·ªπ thu·∫≠t</CardTitle>
            <CardDescription>
              Th√¥ng tin v·ªÅ c√°c ch·ªâ s·ªë k·ªπ thu·∫≠t v√† t√≠n hi·ªáu giao d·ªãch
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="p-4 border rounded-lg">
                  <h3 className="font-medium mb-2">Ch·ªâ b√°o RSI</h3>
                  <p className="text-sm text-gray-600">
                    Relative Strength Index (RSI) ƒëo l∆∞·ªùng t·ªëc ƒë·ªô v√† thay ƒë·ªïi c·ªßa bi·∫øn ƒë·ªông gi√°. 
                    RSI tr√™n 70 cho t√≠n hi·ªáu qu√° mua, d∆∞·ªõi 30 cho t√≠n hi·ªáu qu√° b√°n.
                  </p>
                </div>
                
                <div className="p-4 border rounded-lg">
                  <h3 className="font-medium mb-2">MACD</h3>
                  <p className="text-sm text-gray-600">
                    Moving Average Convergence Divergence (MACD) ch·ªâ ra xu h∆∞·ªõng v√† ƒë·ªông l∆∞·ª£ng c·ªßa gi√°. 
                    Khi MACD c·∫Øt l√™n tr√™n ƒë∆∞·ªùng t√≠n hi·ªáu, ƒë√≥ l√† t√≠n hi·ªáu mua.
                  </p>
                </div>
                
                <div className="p-4 border rounded-lg">
                  <h3 className="font-medium mb-2">Bollinger Bands</h3>
                  <p className="text-sm text-gray-600">
                    Bollinger Bands ƒëo l∆∞·ªùng ƒë·ªô bi·∫øn ƒë·ªông c·ªßa gi√°. Khi gi√° ch·∫°m d·∫£i tr√™n, 
                    c√≥ th·ªÉ b·ªã qu√° mua; khi ch·∫°m d·∫£i d∆∞·ªõi, c√≥ th·ªÉ b·ªã qu√° b√°n.
                  </p>
                </div>
                
                <div className="p-4 border rounded-lg">
                  <h3 className="font-medium mb-2">Moving Averages</h3>
                  <p className="text-sm text-gray-600">
                    ƒê∆∞·ªùng trung b√¨nh ƒë·ªông gi√∫p x√°c ƒë·ªãnh xu h∆∞·ªõng. Golden Cross (MA50 &gt; MA200) 
                    l√† t√≠n hi·ªáu tƒÉng gi√°, Death Cross (MA50 &lt; MA200) l√† t√≠n hi·ªáu gi·∫£m gi√°.
                  </p>
                </div>
              </div>
              
              <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h3 className="font-medium text-blue-800 mb-2">üéØ Chi·∫øn l∆∞·ª£c giao d·ªãch</h3>
                <p className="text-sm text-blue-700">
                  K·∫øt h·ª£p c√°c ch·ªâ s·ªë k·ªπ thu·∫≠t ƒë·ªÉ ƒë∆∞a ra quy·∫øt ƒë·ªãnh giao d·ªãch. 
                  T√¨m ki·∫øm s·ª± x√°c nh·∫≠n t·ª´ nhi·ªÅu ch·ªâ s·ªë tr∆∞·ªõc khi v√†o l·ªánh, 
                  v√† lu√¥n qu·∫£n l√Ω r·ªßi ro v·ªõi stop-loss.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}